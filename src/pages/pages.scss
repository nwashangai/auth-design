@import 'sass-rem';
@import 'assets/variables';

.container {
  width: 100%;
  height: 100%;

  &__wrapper {
    position: absolute;
    top: 50%;
    left: 50%;
    background-color: map-get($palette, transperent);
    width: 100%;
    max-width: rem(620px);
    max-height: 98vh;
    padding: rem(20px);
    overflow-y: scroll;
    transform: translate(-50%, -50%);
  }

  &__main {
    width: 100%;
    min-height: rem(400px);
    padding: rem(10px) rem(40px) rem(40px);
    border-radius: rem(12px);
    box-shadow: 0 0 rem(20px) rem(5px) #0000001a;

    > p:first-child {
      //
    }

    > p:nth-child(2) {
      margin: rem(30px) 0;

      span {
        font-size: rem(28px);
      }
    }

    > p:nth-child(3) {
      margin-top: rem(40px);
    }

    .control {
      display: flex;
      justify-content: space-between;
    }

    > p:last-child {
      margin: rem(50px) 0 rem(20px);

      span {
        font-size: rem(18px);
        cursor: pointer;
        align-self: center;
      }
    }
  }

  &__footer {
    display: flex;
    justify-content: space-between;
    width: 100%;
  }

  &__settings {
    display: flex;
    justify-content: space-between;
    width: 50%;
    max-width: rem(220px);
    padding: rem(15px) rem(10px);
  }

  &__tools {
    display: flex;
    justify-content: space-between;
    width: 50%;
    max-width: rem(200px);
    padding: rem(15px) rem(10px);
    font-size: rem(15px);

    span {
      cursor: pointer;
    }
  }
}

.light-theme {
  background-color: map-get($palette, pure);

  * {
    color: map-get($palette, secondary);
  }

  .container__settings {
    svg {
      * {
        color: map-get($palette, tetiary);
      }
    }
  }

  li:hover {
    background-color: map-get($palette, tetiary-light);
  }

  .text-input {
    border: rem(1.8px) solid map-get($palette, border-line);
    color: map-get($palette, dark);
  }

  input::placeholder {
    color: map-get($palette, placeholder);
  }

  .forgot,
  .container__main > p:last-child > a {
    color: map-get($palette, link) !important;
  }
}

.dark-theme {
  background-color: map-get($palette, tetiary);

  * {
    color: map-get($palette, pure);
  }

  li:hover {
    background-color: map-get($palette, tetiary-dark);
  }

  .text-input {
    border: rem(1.8px) solid map-get($palette, pure);
    color: map-get($palette, pure);
  }

  input::placeholder {
    color: map-get($palette, border-line);
  }

  .forgot,
  .container__main > p:last-child > a {
    color: map-get($palette, tetiary-light) !important;
  }
}

.dropdown {
  position: relative;
  width: fit-content;
  max-width: rem(165px);
  font-size: rem(15px);
  text-decoration: underline;

  > div:first-child {
    display: flex;
    margin-top: rem(6px);
    cursor: pointer;
  }

  &__chevron {
    vertical-align: middle;
    margin-left: rem(5px);
  }

  ul {
    position: absolute;
    top: rem(30px);
    right: 0;
    min-width: rem(110px);
    margin: auto;
    padding: 0;
    border-radius: rem(12px);
    box-shadow: 0 0 rem(20px) rem(5px) #0000001a;

    li {
      width: 100%;
      padding: rem(5px) rem(10px);
      text-align: center;
      cursor: pointer;
      list-style-type: none;
    }

    > li:first-child {
      border-top-left-radius: rem(12px);
      border-top-right-radius: rem(12px);
    }

    > li:last-child {
      border-bottom-left-radius: rem(12px);
      border-bottom-right-radius: rem(12px);
    }
  }
}

.show {
  display: block;
}

.hide {
  display: none;
}

.logo {
  width: rem(100px);
  height: rem(100px);
}

.text-input {
  background-color: map-get($palette, transperent);
  width: 100%;
  padding: rem(20px);
  border-radius: rem(12px);
}

.text-input,
.text-input::placeholder {
  font-size: rem(20px);
}

.auth-btn {
  background: map-get($palette, primary);
  width: fit-content;
  min-width: rem(120px);
  padding: rem(10px);
  border: unset;
  border-radius: rem(12px);
  font-size: rem(17px);
  color: map-get($palette, pure);

  * {
    color: map-get($palette, pure) !important;
  }
}

.forgot {
  font-size: rem(18px);
  text-decoration: none;
  cursor: pointer;
  align-self: center;
}

.error-message {
  color: #f72727;
}
